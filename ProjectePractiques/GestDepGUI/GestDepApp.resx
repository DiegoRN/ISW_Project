<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iPw/CtsLdGSc4iQAAAAASUVORK5CYII=
</value>
  </data>
</root>